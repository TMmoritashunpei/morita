しきい値
敷地という発音もする場合がある

ポイントタイムリカバリー
この瞬間の時点に戻すことができる。

クラウドウォッチ
一番監視したいしたいから
5分にしてるのはお金が欲しいから

他はデフォルト1分
起動しているかどうかはヘルスチェック

CPUはどこのサーバーだろうと監視したい。
S3
バゲットサイズは見ておきたい
DB
接続数上限決めたりすることができる。
ec2
ステータスチェック
フォールド

200　400　404　500
など失敗している個所を探す
500番台はサーバーのエラーなので
検知する

DB
デッドロック
DBでセレクトをしたプログラム
アップデートを同時に行った場合
セレクトするときは
上から流れる
アップデートは下からくる
上からも下からも処理をしてつかんでいるので
他の処理できなくなる。
クラウドウォッチからデッドロックを見つけることができる。
回避策もできる

スロークエリ

クーロンタブ
job定期実行
スクリプトに書いておく

自動実行
JP1など有料ツール
もメーカーが作ってる
いろんなツールを作ってる。

ツールは細かいことまで設定できる。

ボリュームID　EBSid
vol-0525f5132ce254ac8


aws ec2 create-snapshot --volume-id vol-0525f5132ce254ac8 --description "ec2backup-MS"

エンクリプト
暗号化
AWS
ボタン一つで暗号化できる

ディスクリプション
タグ

ディクリプト
複合化
暗号化の対義語暗号化を戻す

ペンディング
実行中

su
スイッチユーザー
~はホームディレクトリ

vi改行入れる
改行入れないと終わりと認識しない。
＊　＊　＊　＊
分　時　日付　月　曜日の指定無いなら＊にする
04 * * * /bin/sh/ec2-user/backup.sh
/bin/sh　シエルコマンド
その後が引数
4時に毎日実行する

crontab crontab.txt

crontab -l


ec2サーバーのインスタンス自動停止　冗長化してる場合は効果できる。

SJISはWindowsのものなので
日本語が入っていなければ
utf-8

cr+lf
改行コード
unix系

lfラインフィード
シェル実行するのはリナックスなので
改行コードlfにする


crontabだけ打って
そのあとに内容を入力することができる。

LBを使ってスケールアップする


スケールアップ
サーバーCPU負荷超えました

ダウンタイムいらない
スナップショットから同じサーバーを立てて
ロードバランサ―の配下に入れて分散させる

クラウドフロント
エッジロケーション
コンテンツデリバリーシステム
キャッシュ残しておく

パソコンからエッジロケーション
ルート53
VPC　サブネット


ボトルネック
弱いところ

ec2　モニタリング5分おきに2週間無料で記録する

エッジロケーションとは
地域ごとにある
ヨーロッパ
アジア
アメリカ
南米
北米
リージョンよりも大きい

キャッシュ
履歴
アクセスせずにもらってくることができる。



プログラムのキャッシュ
マスターテーブル
頻繁に取ってくる値がある
毎回そのたびに取ってくるのは大変
アプリ起動したら
DBのキャッシュを見に行く

インフラエンジニア
サーバーを立てる
オンプレミスの場合は機材
セキュリティ
ディレクトリ構成
色々
システムエンジニア
プログラムで作ったものを置いて
動かす
SEは上流工程もする



cloud front

route53で
Cname作って
cloud frontの
domain name
d2tye5kph89eu7.cloudfront.net
を入れる

ELB
サブネットに構築するが
他のサブネットにも関与することができる。
